// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model User {
  id String @id @default(cuid())

  externalId String? @unique
  quotaLimit Int
  plan Plan @default(FREE)
  
  email String @unique
  apiKey String @unique @default(cuid())
  discordId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EventCategories EventCategory[]
  Events Event[]
  Quota Quota[]

  @@index([email, apiKey])
}

model EventCategory {
  id String @id @default(cuid())

  name String @unique
  color Int
  emoji String?

  user User @relation(fields: [userId], references: [id])
  userId String

  events Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, userId])
}

model Event {
  id String @id @default(cuid())
  name String
  fields Json
  formattedMessage String


  deliveryStatus  DeliveryStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String

  EventCategory EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId String?

  @@index([createdAt])
}

model Quota {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique

  year Int
  month Int
  day Int
  count Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}